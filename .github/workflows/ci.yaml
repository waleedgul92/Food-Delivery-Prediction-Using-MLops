name: Python Application CI

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.9"

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout repository (with full history for DVC)
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    # 3. Install system dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    # 4. Cache pip dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # 5. Install Python dependencies
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # 6. Install DVC with S3 support
    - name: Install DVC
      run: |
        pip install --upgrade "dvc[s3]"

    # 7. Configure AWS credentials for S3 access
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    # 8. Pull data from S3 via DVC
    - name: Pull data from S3 with DVC
      run: |
        dvc pull

    # 9. Run DVC pipeline
    - name: Run DVC pipeline
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_KEY }}
      run: |
        dvc repro
