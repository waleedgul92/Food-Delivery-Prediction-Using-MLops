name: Python Application CI

on:
  push:
    branches: [ main, develop  , master ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.9"

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for DVC

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', 'FAST_API_DIR/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dvc dvc[s3] dagshub mlflow
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f FAST_API_DIR/requirements.txt ]; then pip install -r FAST_API_DIR/requirements.txt; fi

    - name: Configure DVC remote (if using DagsHub storage)
      run: |
        dvc remote modify origin --local auth basic
        dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
        dvc remote modify origin --local password ${{ secrets.DAGSHUB_TOKEN }}
      continue-on-error: true

    